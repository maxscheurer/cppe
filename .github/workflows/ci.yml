name: CI

on:
  push:
    branches:
      - "*"
      #- master
    tags:
      - 'v*'
  pull_request:
    branches:
      - master

env:
  BUILD_TYPE: Release

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version:
          - 3.8

    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v3

    - uses: conda-incubator/setup-miniconda@v2
      with:
        mamba-version: "*"
        auto-update-conda: true
        auto-activate-base: false
        activate-environment: cppe-gha
        environment-file: .github/environment.yml
        channel-priority: true
        python-version: ${{ matrix.python-version }}

    - name: Select CMake CLI options
      run: |
        echo "We are running on ${{ matrix.os }}"
        if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
           echo "CXX=g++" >> $GITHUB_ENV
        elif [ "${{ matrix.os }}" == "macos-latest" ]; then
           echo "CXX=clang++" >> $GITHUB_ENV
        else
           echo "CXX=clang-cl" >> $GITHUB_ENV
        fi

    - name: Install dependencies from PyPI
      run: |
        python -m pip install git+https://gitlab.com/robertodr/polarizationsolver.git@master

    - name: Configure
      run: |
        cmake -S. \
              -Bbuild \
              -GNinja \
              -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
              -DCMAKE_CXX_COMPILER=${CXX} \
              -DENABLE_PYTHON_INTERFACE=ON \
              -DBUILD_SHARED_LIBS=ON

    - name: Build
      run: |
        cmake --build build --config ${{ env.BUILD_TYPE }} -- -v -d stats

    - name: Test
      run: |
        PYTHONPATH=$PYTHONPATH:$PWD/build/lib/python${{ matrix.python-version }}/site-packages pytest --capture=no --log-cli-level=INFO

    # TODO move to separate workflow
    #- name: Build and Test Setuptools
    #  run: |
    #    rm -rf build
    #    python setup.py install
    #    py.test
